<style>
	/* make containers holding floats expand to hold content */
	.clear:after{
		content: ".";
		display: block;
		height: 0;
		font-size: 0;
		clear: both;
		visibility: hidden;
	}

	.clear{
		min-height: 1px;
	}
	*html .clear{
		height: 1px;
	}
	.column_name{ float: left; height: 20px; width: 550px; }
	.column_bucket{ float: left; height: 20px;width: 100px; }
	.column_time{ float: left; height: 20px;width: 175px; }
	.column_start{ float: left; height: 20px; width: 250px;}
	.column_project{ float: left; height: 20px; width: 450px;}
	.sortable { cursor: move;}
	.sortable:hover {background: none repeat scroll 0 0 #FFFFDD;}
	.row		{position: relative; width: 100%; height:15px; border:0; margin-bottom:2px; padding:3px; font-size: 10px;}
	.row select {font-size: 10px;}
	div#unordered_issues div.sortable span.column_start {display:none;}
	div#issues div.sortable span.column_time {display:none;}
	div.dropmarker {
	      height:6px;
	      width:100px;
	      border-top:2px solid #000;
	      color: #ddd;

	      z-index:1000;
	      margin : 0 0 30px 20px;

	   }
	
	div.issue {
	border:0;
	margin-bottom:2px;
	padding:3px;
	}
	
	div.list {
		border:1px solid #D7D7D7;
		margin-bottom:6px;
	}
</style>
<div id="query_form_content">
	<% if (User.current.admin?) %>
	<div class="contextual">
		<% form_remote_tag :url => {:action => 'add_bucket', :controller=> 'issue_order'} do %>
		<a class="icon icon-add" onclick="Element.show('addbuckets'); Form.Element.focus('issue_bucket[name]'); return false;" href="javascript: void(0);">Add Bucket</a>
		<span id="addbuckets" style="display:none"><input name="issue_bucket[name]" size="25">
		<%= submit_tag "Save" %>
		<% end %>
	</div>
	<% end %>
    <fieldset class="collapsible">
		<legend onclick="toggleFieldset(this);"><%= h("Buckets") %></legend>
		<div id="buckets">
			<input id="bucket_" type="checkbox" class="bucket" onclick="toggleBucket(this)" />None (<span id="bucket__count"></span>)
  			<% @buckets.each do |bucket| %>
				<input type="checkbox" class="bucket" onclick="toggleBucket(this)" id="bucket_<%= bucket.id %>" /><%= bucket.name %> (<span id="bucket_<%= bucket.id %>_count"></span>)
			<% end %>
		</div>
    </fieldset>
</div>
<br/>
	<!--
	<h3>Un-Prioritized</h3>
	-->
	<div id="unordered_issues" class="list issues clear header" style="margin-right: 5px;">
		<div style="font-weight: bold; background-color: #EEEEEE;" class="row clear">
				<div class="column_name">Un-Prioritized</div>
				<% if (User.current.admin?) %>
					<div class="column_bucket">Bucket</div>
				<% end %>
				<div class="column_project">Project</div>
				<!--
				<span class="column_time">Estimated Hours</span>
				-->
		</div>
		<% @unordered_issues.each do |issue| %>
		<div id="issue_<%= issue.id %>"  class="sortable row clear bucket_<%= issue.issue_bucket_id && issue.issue_bucket_id > 0 ? issue.issue_bucket_id : '' %>" style="display: none">
		    <div class="column_name"><%= link_to "#" + issue.id.to_s + " " + issue.subject, :controller => 'issues', :action => 'show', :id => issue %></div>
			<% if (User.current.admin?) %>
				<div class="column_bucket">
					<select id="issue_<%= issue.id %>_issue_bucket_id" onchange="updateBucket(this, <%= issue.id %>)">
						<option value="0" <%= issue.issue_bucket_id && issue.issue_bucket_id > 0 ? '' : 'selected' %>>NONE</option>
					<% @buckets.each do |bucket| %>
						<option value="<%= bucket.id %>" <%= issue.issue_bucket_id == bucket.id ? 'selected="selected"' : '' %>><%= bucket.name %></option>
					<% end %>
					</select>
				</div>
				<div class="column_project"><%= @tree[issue.project.id] %><%= " - #{issue.category}" if issue.category  %></div>
				<!--
				<div class="column_time"><input type="text" value="<%= issue.estimated_hours %>" id="issue_<%= issue.id %>_estimated_hours" /></div>
				<div class="column_start">TBD</div>
				<div class="column_save" id="save_issue_<%= issue.id %>"><a href="javascript: void(0);" onclick="saveIssue(<%= issue.id %>)">Save</a></div>
				-->
			<% else %>
				<!--
				<div class="column_bucket"><%= issue.issue_bucket_id && issue.issue_bucket_id > 0 ? issue.issue_bucket.name : 'NONE' %></div>
				-->
				<div class="column_project"><%= @tree[issue.project.id] %></div>
				<!--
				<div class="column_time"><%= issue.estimated_hours %></div>
				<div class="column_start">TBD</div>
				-->
			<% end %>
		</div>
		<% end %>
	</div><br/>
	<!--
	<h3>Current Priority</h3>
	-->
	<div id="issues" class="list issues clear header"  style="margin-right: 5px;" >
		<div style="font-weight: bold; background-color: #EEEEEE;" class="row clear">
				<div class="column_name">Current Prioritization</div>
				<% if (User.current.admin?) %>
					<div class="column_bucket">Bucket</div>
				<% end %>
				<div class="column_project">Project</div>
				<div style="float:right"><a href="javascript: void(0);" style="display:none;" id="saveOrder" onclick="saveOrder();">Save Order</a> &nbsp; <span id="success"></span></div>
				<!--
				<div class="column_start">Earliest Start Time*</div>
				-->
		</div>
		<% @ordered_issues.each do |issue| %>
		<div id="issue_<%= issue.id %>"  class="sortable row clear bucket_<%= issue.issue_bucket_id && issue.issue_bucket_id > 0 ? issue.issue_bucket_id : '' %>" style="display: none">
		    <div class="column_name"><%= link_to "#" + issue.id.to_s + " " + issue.subject, :controller => 'issues', :action => 'show', :id => issue %></div>
			<% if (User.current.admin?) %>
				<div class="column_bucket">
					<select id="issue_<%= issue.id %>_issue_bucket_id" onchange="updateBucket(this, <%= issue.id %>)">
						<option value="0" <%= issue.issue_bucket_id && issue.issue_bucket_id > 0 ? '' : 'selected' %>>NONE</option>
					<% @buckets.each do |bucket| %>
						<option value="<%= bucket.id %>" <%= issue.issue_bucket_id == bucket.id ? 'selected="selected"' : '' %>><%= bucket.name %></option>
					<% end %>
					</select>
				</div>
				<div class="column_project"><%= @tree[issue.project.id] %><%= " - #{issue.category}" if issue.category  %></div>
				<!--
				<div class="column_time"><input type="text" value="<%= issue.estimated_hours %>" id="issue_<%= issue.id %>_estimated_hours" /></div>
				<div class="column_start">TBD</div>
				<div class="column_save" id="save_issue_<%= issue.id %>"><a href="javascript: void(0);" onclick="saveIssue(<%= issue.id %>)">Save</a></div>
				-->
			<% else %>
				<!--
				<div class="column_bucket"><%= issue.issue_bucket_id && issue.issue_bucket_id > 0 ? issue.issue_bucket.name : 'NONE' %></div>
				-->
				<div class="column_project"><%= @tree[issue.project.id] %></div>
				<!--
				<div class="column_time"><%= issue.estimated_hours %></div>
				<div class="column_start">TBD</div>
				-->
			<% end %>
		</div>
		<% end %>
	</div>
<div style="margin-right: 5px; width: 720px;">
	<div></div>
</div><br/><br/>
<!--
* Other projects may move this number around, but this is the earliest estimated start time for the given issue.
-->
<script>
	// override the droppable "fire" function for our needs
	Droppables.fire = function(event, element){
		orderChanged(element)
		if(!this.last_active) return;
	    Position.prepare();

	    if (this.isAffected([Event.pointerX(event), Event.pointerY(event)], element, this.last_active))
	      if (this.last_active.onDrop) {
	        this.last_active.onDrop(element, this.last_active.element, event);
	        return true;
	      }
	}
	
	sections = ['unordered_issues', 'issues'];
	Sortable.create('unordered_issues', {
		 tag:'div'
		,dropOnEmpty: true
		,only:'sortable'
		,constraint: 'vertical'
		,containment: sections
		,ghosting: true
		,onUpdate: function(){colorRows()}
	})
	Sortable.create('issues', {
		 tag:'div'
		,dropOnEmpty: true
		,only:'sortable'
		,constraint: 'vertical'
		,containment: sections
		,ghosting: true
		// ,onUpdate: orderChanged
	})
	updateEstimatedTimes()
	colorRows()
	updateCounts()
	toggleBucket()
	
	function orderChanged (row) {
		updateEstimatedTimes()
		colorRows()
		// lets do an ajax request IF it's a child of the issues list, and not of the unprioritized list
		if (row.descendantOf('issues')) {
			previous = row.previous()
			next = row.next()
			new Ajax.Request('/issue_order/save_orders', {
				// evalScripts:true,
				method: 'post',
				parameters:{
					 'issue_id': row.id.match(/[0-9]+/)
					,'previous_id': (previous) ? previous.id.match(/[0-9]+/) : ''
					,'next_id': (next) ? next.id.match(/[0-9]+/) : ''
				}
			});
		}
	}
	
	function updateEstimatedTimes(){
		return true;
		var bucketTime = [];
		if ($('issues').select('.sortable').length > 0){
			$('issues').select('.sortable').each(function(issue){
				var bucket = "";
				var time = 0;
				<% if (User.current.admin?) %>
					bucket = $(issue.id + '_issue_bucket_id').options[$(issue.id + '_issue_bucket_id').selectedIndex].innerHTML;
					time = $(issue.id + "_estimated_hours").value;
				<% else %>
					bucket = issue.select('.column_bucket').first().innerHTML;
					time = issue.select('.column_time').first().innerHTML - 0;
				<% end %>
				if (bucket != "NONE"){
					if (bucketTime[bucket]){
						issue.select('.column_start').first().innerHTML = bucketTime[bucket] + " days";
						bucketTime[bucket] += Math.ceil(time/8);
					}else{
						issue.select('.column_start').first().innerHTML = "Immediately";
						bucketTime[bucket] = Math.ceil(time/8);
					}
				}else{
					issue.select('.column_start').first().innerHTML = "-";
				}
			});
		}
	}
	
	function saveIssue(issue_id, bucket_id){
		new Ajax.Request('/issue_order/save', {
			evalScripts:true,
			method: 'post',
			parameters:{
				'issue[id]': issue_id,
				// 'issue[estimated_hours]': $('issue_' + issue_id + '_estimated_hours').value,
				'issue[issue_bucket_id]': bucket_id
			}
		});
		toggleBucket()
		updateCounts()
	}
	
	function removeBucket(bucket_id){
		new Ajax.Request('/issue_order/remove_bucket/', {
			evalScripts:true,
			parameters:{ id: bucket_id }
		});
	}
	
	function saveOrder(){
		//this needs to serialize the order of the ordered_issues and unordered_issues lists, and use them to save orders.
		var unordered_issue_array = "";
		if ($('unordered_issues').select('.sortable').length > 0){
			unordered_issue_array = Sortable.sequence('unordered_issues').join(",");
		}
		var issue_array = "";
		if ($('issues').select('.sortable').length > 0){
			issue_array = Sortable.sequence('issues').join(",");
		}
		new Ajax.Request('/issue_order/save_orders', {
						evalScripts:true,
						parameters:{
								unordered_issues: unordered_issue_array,
								issues: issue_array
						},
						onSuccess: function() { $('saveOrder').hide(); $('success').show();}
		}); 
		return false;
	}
	
	function colorRows () {
		var count = 1
		$$('.sortable').each(function(i){
			if(count % 2 == 0){
				i.removeClassName('odd')
				i.addClassName('even')
			}else{
				i.removeClassName('even')
				i.addClassName('odd')
			}
			count++
		})
	}
	
	function updateBucket (select, issueId) {
		var row = select.up('.row')
		row.classNames().each(function(c){
			if (c.match(/bucket/))
				row.removeClassName(c)
		})
		row.addClassName('bucket_' + select.value)
		saveIssue(issueId, select.value)
	}
	
	function toggleBucket (bucket) {
		if (!bucket) {
			$$('.bucket').each(function  (b) {
				if (b.checked) {
					bucket = b
				}
			})
		}
		if(!bucket) return 
		var state = (bucket.checked)? 'on' : 'off'
		// uncheck all others
		if (state == 'on') {
			$$('.bucket').each(function (b) {
				if (b.id != bucket.id) b.checked = false
			})
		}
		
		// show/hide rows
		if (state == 'on') {
			$$('.sortable').each(function  (row) {
				if (row.hasClassName(bucket.id)) 
					row.show()
				else
					row.hide()
			})
		} else{
			$$('.sortable').each(function  (row) {
				row.hide()
			})
		}
	}
	
	function updateCounts () {
		$$('.bucket').each(function (b) {
			var count = 0
			$$('.sortable').each(function (row){
				if (row.hasClassName(b.id)) count++
			})
			$(b.id  + "_count").innerHTML = count
		})
	}
	
</script>
